import { z } from "zod";

export const guestLoginSchema = z.object({
   email: z.string().email().nonempty(),
   marketingApproved: z.boolean().optional(),
   device: z
      .object({
         userAgent: z.string().optional(),
         browser: z.object({
            name: z.string().optional(),
            version: z.string().optional(),
            major: z.string().optional(),
            type: z.string().optional(),
         }),
         device: z.object({
            type: z.string().optional(),
            model: z.string().optional(),
            vendor: z.string().optional(),
         }),
         os: z.object({
            name: z.string().optional(),
            version: z.string().optional(),
         }),
         cpu: z.object({
            architecture: z.string().optional(),
         }),
         engine: z.object({
            name: z.string().optional(),
            version: z.string().optional(),
         }),
      })
      .optional(),
});

export const createDeviceSchema = z.object({
   userId: z.number().nonnegative().optional(),
   device: z
      .object({
         userAgent: z.string().optional(),
         browser: z.object({
            name: z.string().optional(),
            version: z.string().optional(),
            major: z.string().optional(),
            type: z.string().optional(),
         }),
         device: z.object({
            type: z.string().optional(),
            model: z.string().optional(),
            vendor: z.string().optional(),
         }),
         os: z.object({
            name: z.string().optional(),
            version: z.string().optional(),
         }),
         cpu: z.object({
            architecture: z.string().optional(),
         }),
         engine: z.object({
            name: z.string().optional(),
            version: z.string().optional(),
         }),
      })
      .optional(),
   macAddress: z.string().optional(),
});

export const listGuestSchema = z.object({
   itemsPerPage: z.number(),
   page: z.number(),
   search: z.string(),
});

/**
 * Tuto cestu volá Fortigate pomocí HTTP 301 redirectu
 *
 * Fortigate request example
 * https://srv-captive/?post=http://192.168.30.1:1000/fgtauth&magic=040d028c9aaae999&usermac=60:03:08:8f:5e:b6&apmac=08:5b:0e:08:d4:ee&apip=192.168.30.41&ssid=test&apname=FWF60D4613003326&bssid=00:00:00:00:00:00
 */
export const guestPortalSchema = z.object({
   post: z.string().nonempty(), // Post URL address
   magic: z.string().nonempty(), // Magic token generated by Fortigate
   usermac: z.string().nonempty(), // MAC address of the user
   apmac: z.string().nonempty(), // MAC address of the access point
   apip: z.string().ip(), // IP address of the access point
   ssid: z.string().nonempty(), // SSID of the access point
   apname: z.string().nonempty(), // Name of the access point
   bssid: z.string().nonempty(), // BSSID of the access point
});

export type GuestPortalSchema = z.infer<typeof guestPortalSchema>;
